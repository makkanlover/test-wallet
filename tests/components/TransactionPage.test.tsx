import { screen, fireEvent } from '@testing-library/react';
import { render } from '../utils/testUtils';
import TransactionPage from '../../ui/pages/TransactionPage';

describe('TransactionPage', () => {
  it('Êú™Êé•Á∂öÁä∂ÊÖã„Åß„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
    render(<TransactionPage />);
    
    expect(screen.getByText('„Ç¶„Ç©„É¨„ÉÉ„Éà„ÅåÊé•Á∂ö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì')).toBeInTheDocument();
    expect(screen.getByText('„Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥„ÇíÈÄÅ‰ø°„Åô„Çã„Å´„ÅØ„ÄÅ„Åæ„Åö„Ç¶„Ç©„É¨„ÉÉ„Éà„ÇíÊé•Á∂ö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')).toBeInTheDocument();
  });

  it('Êé•Á∂öÊ∏à„ÅøÁä∂ÊÖã„Åß„Çø„Éñ„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
    const preloadedState = {
      wallet: {
        address: '0x1234567890123456789012345678901234567890',
        balance: '1.5',
        network: {
          id: 'goerli',
          name: 'Ethereum Goerli',
          rpcUrl: 'https://goerli.infura.io/v3/',
          chainId: 5,
          currency: 'GoerliETH'
        },
        isConnected: true,
        connectionType: 'local',
        provider: null,
        isLoading: false,
        error: null,
      }
    };

    render(<TransactionPage />, { preloadedState });
    
    expect(screen.getByText('„Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥‰ΩúÊàê')).toBeInTheDocument();
    expect(screen.getByText('üí∞ „Éç„Ç§„ÉÜ„Ç£„Éñ„Éà„Éº„ÇØ„É≥')).toBeInTheDocument();
    expect(screen.getByText('ü™ô ERC20„Éà„Éº„ÇØ„É≥')).toBeInTheDocument();
    expect(screen.getByText('üñºÔ∏è NFTÁô∫Ë°å')).toBeInTheDocument();
    expect(screen.getByText('üìã Â±•Ê≠¥')).toBeInTheDocument();
  });

  it('„Çø„Éñ„ÅÆÂàá„ÇäÊõø„Åà„ÅåÊ≠£„Åó„ÅèÂãï‰Ωú„Åô„Çã', () => {
    const preloadedState = {
      wallet: {
        address: '0x1234567890123456789012345678901234567890',
        balance: '1.5',
        network: {
          id: 'goerli',
          name: 'Ethereum Goerli',
          rpcUrl: 'https://goerli.infura.io/v3/',
          chainId: 5,
          currency: 'GoerliETH'
        },
        isConnected: true,
        connectionType: 'local',
        provider: null,
        isLoading: false,
        error: null,
      }
    };

    render(<TransactionPage />, { preloadedState });
    
    // „Éá„Éï„Ç©„É´„Éà„Åß„ÅØ„Éç„Ç§„ÉÜ„Ç£„Éñ„Éà„Éº„ÇØ„É≥„Çø„Éñ„ÅåÈÅ∏Êäû
    expect(screen.getByText('„Éç„Ç§„ÉÜ„Ç£„Éñ„Éà„Éº„ÇØ„É≥ÈÄÅ‰ø°')).toBeInTheDocument();
    
    // ERC20„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ
    const erc20Tab = screen.getByText('ü™ô ERC20„Éà„Éº„ÇØ„É≥');
    fireEvent.click(erc20Tab);
    expect(screen.getByText('ERC20„Éà„Éº„ÇØ„É≥ÈÄÅ‰ø°')).toBeInTheDocument();
    
    // NFT„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ
    const nftTab = screen.getByText('üñºÔ∏è NFTÁô∫Ë°å');
    fireEvent.click(nftTab);
    expect(screen.getByText('NFTÁô∫Ë°å')).toBeInTheDocument();
    
    // Â±•Ê≠¥„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ
    const historyTab = screen.getByText('üìã Â±•Ê≠¥');
    fireEvent.click(historyTab);
    expect(screen.getByText('„Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥Â±•Ê≠¥')).toBeInTheDocument();
  });

  it('Â±•Ê≠¥„ÅåÁ©∫„ÅÆÂ†¥Âêà„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
    const preloadedState = {
      wallet: {
        address: '0x1234567890123456789012345678901234567890',
        balance: '1.5',
        network: {
          id: 'goerli',
          name: 'Ethereum Goerli',
          rpcUrl: 'https://goerli.infura.io/v3/',
          chainId: 5,
          currency: 'GoerliETH'
        },
        isConnected: true,
        connectionType: 'local',
        provider: null,
        isLoading: false,
        error: null,
      },
      transaction: {
        history: [],
        isLoading: false,
        error: null,
        pendingTx: null,
        gasEstimate: null,
        tokenInfo: null,
      }
    };

    render(<TransactionPage />, { preloadedState });
    
    // Â±•Ê≠¥„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ
    const historyTab = screen.getByText('üìã Â±•Ê≠¥');
    fireEvent.click(historyTab);
    
    expect(screen.getByText('Â±•Ê≠¥„Åå„ÅÇ„Çä„Åæ„Åõ„Çì')).toBeInTheDocument();
    expect(screen.getByText('„Éà„É©„É≥„Ç∂„ÇØ„Ç∑„Éß„É≥„ÇíÈÄÅ‰ø°„Åô„Çã„Å®„ÄÅ„Åì„Åì„Å´Â±•Ê≠¥„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ')).toBeInTheDocument();
  });
});