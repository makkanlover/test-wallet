import { screen, fireEvent } from '@testing-library/react';
import { render } from '../utils/testUtils';
import ContractPage from '../../ui/pages/ContractPage';

describe('ContractPage', () => {
  it('Êú™Êé•Á∂öÁä∂ÊÖã„Åß„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
    render(<ContractPage />);
    
    expect(screen.getByText('„Ç¶„Ç©„É¨„ÉÉ„Éà„ÅåÊé•Á∂ö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì')).toBeInTheDocument();
    expect(screen.getByText('„Ç≥„É≥„Éà„É©„ÇØ„Éà„Çí„Éá„Éó„É≠„Ç§„Åô„Çã„Å´„ÅØ„ÄÅ„Åæ„Åö„Ç¶„Ç©„É¨„ÉÉ„Éà„ÇíÊé•Á∂ö„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ')).toBeInTheDocument();
  });

  it('Êé•Á∂öÊ∏à„ÅøÁä∂ÊÖã„ÅßÈñãÁô∫‰∏≠„ÅÆË≠¶Âëä„Å®„Çø„Éñ„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
    const preloadedState = {
      wallet: {
        address: '0x1234567890123456789012345678901234567890',
        balance: '1.5',
        network: {
          id: 'goerli',
          name: 'Ethereum Goerli',
          rpcUrl: 'https://goerli.infura.io/v3/',
          chainId: 5,
          currency: 'GoerliETH'
        },
        isConnected: true,
        connectionType: 'local',
        provider: null,
        isLoading: false,
        error: null,
      }
    };

    render(<ContractPage />, { preloadedState });
    
    expect(screen.getByText('„Ç≥„É≥„Éà„É©„ÇØ„Éà‰ΩúÊàê')).toBeInTheDocument();
    expect(screen.getByText('üöß ÈñãÁô∫‰∏≠„ÅÆÊ©üËÉΩ')).toBeInTheDocument();
    expect(screen.getByText('ÁèæÂú®„ÄÅ„Ç≥„É≥„Éà„É©„ÇØ„Éà„ÅÆ„Éá„Éó„É≠„Ç§Ê©üËÉΩ„ÅØÈñãÁô∫‰∏≠„Åß„Åô„ÄÇ')).toBeInTheDocument();
    
    expect(screen.getByText('ü™ô ERC20‰ΩúÊàê')).toBeInTheDocument();
    expect(screen.getByText('üñºÔ∏è ERC721‰ΩúÊàê')).toBeInTheDocument();
    expect(screen.getByText('üìã „Ç≥„É≥„Éà„É©„ÇØ„Éà‰∏ÄË¶ß')).toBeInTheDocument();
  });

  it('„Çø„Éñ„ÅÆÂàá„ÇäÊõø„Åà„ÅåÊ≠£„Åó„ÅèÂãï‰Ωú„Åô„Çã', () => {
    const preloadedState = {
      wallet: {
        address: '0x1234567890123456789012345678901234567890',
        balance: '1.5',
        network: {
          id: 'goerli',
          name: 'Ethereum Goerli',
          rpcUrl: 'https://goerli.infura.io/v3/',
          chainId: 5,
          currency: 'GoerliETH'
        },
        isConnected: true,
        connectionType: 'local',
        provider: null,
        isLoading: false,
        error: null,
      }
    };

    render(<ContractPage />, { preloadedState });
    
    // „Éá„Éï„Ç©„É´„Éà„Åß„ÅØERC20„Çø„Éñ„ÅåÈÅ∏Êäû
    expect(screen.getByText('ERC20„Éà„Éº„ÇØ„É≥‰ΩúÊàê')).toBeInTheDocument();
    
    // ERC721„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ
    const erc721Tab = screen.getByText('üñºÔ∏è ERC721‰ΩúÊàê');
    fireEvent.click(erc721Tab);
    expect(screen.getByText('ERC721 NFT„Ç≥„É¨„ÇØ„Ç∑„Éß„É≥‰ΩúÊàê')).toBeInTheDocument();
    
    // „Ç≥„É≥„Éà„É©„ÇØ„Éà‰∏ÄË¶ß„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ
    const listTab = screen.getByText('üìã „Ç≥„É≥„Éà„É©„ÇØ„Éà‰∏ÄË¶ß');
    fireEvent.click(listTab);
    expect(screen.getByText('„Éá„Éó„É≠„Ç§Ê∏à„Åø„Ç≥„É≥„Éà„É©„ÇØ„Éà')).toBeInTheDocument();
  });

  it('„Ç≥„É≥„Éà„É©„ÇØ„Éà‰∏ÄË¶ß„ÅåÁ©∫„ÅÆÂ†¥Âêà„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
    const preloadedState = {
      wallet: {
        address: '0x1234567890123456789012345678901234567890',
        balance: '1.5',
        network: {
          id: 'goerli',
          name: 'Ethereum Goerli',
          rpcUrl: 'https://goerli.infura.io/v3/',
          chainId: 5,
          currency: 'GoerliETH'
        },
        isConnected: true,
        connectionType: 'local',
        provider: null,
        isLoading: false,
        error: null,
      },
      contract: {
        contracts: [],
        isLoading: false,
        error: null,
        deployedContract: null,
        gasEstimate: null,
      }
    };

    render(<ContractPage />, { preloadedState });
    
    // „Ç≥„É≥„Éà„É©„ÇØ„Éà‰∏ÄË¶ß„Çø„Éñ„Çí„ÇØ„É™„ÉÉ„ÇØ
    const listTab = screen.getByText('üìã „Ç≥„É≥„Éà„É©„ÇØ„Éà‰∏ÄË¶ß');
    fireEvent.click(listTab);
    
    expect(screen.getByText('„Ç≥„É≥„Éà„É©„ÇØ„Éà„Åå„ÅÇ„Çä„Åæ„Åõ„Çì')).toBeInTheDocument();
    expect(screen.getByText('„Ç≥„É≥„Éà„É©„ÇØ„Éà„Çí„Éá„Éó„É≠„Ç§„Åô„Çã„Å®„ÄÅ„Åì„Åì„Å´‰∏ÄË¶ß„ÅåË°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ')).toBeInTheDocument();
  });

  it('ERC20„Éï„Ç©„Éº„É†„ÅÆÂü∫Êú¨Ë¶ÅÁ¥†„ÅåË°®Á§∫„Åï„Çå„Çã', () => {
    const preloadedState = {
      wallet: {
        address: '0x1234567890123456789012345678901234567890',
        balance: '1.5',
        network: {
          id: 'goerli',
          name: 'Ethereum Goerli',
          rpcUrl: 'https://goerli.infura.io/v3/',
          chainId: 5,
          currency: 'GoerliETH'
        },
        isConnected: true,
        connectionType: 'local',
        provider: null,
        isLoading: false,
        error: null,
      }
    };

    render(<ContractPage />, { preloadedState });
    
    expect(screen.getByText('üìñ ERC20„Éà„Éº„ÇØ„É≥„Å´„Å§„ÅÑ„Å¶')).toBeInTheDocument();
    expect(screen.getByPlaceholderText('‰æã: My Token')).toBeInTheDocument();
    expect(screen.getByPlaceholderText('‰æã: MTK')).toBeInTheDocument();
    expect(screen.getByText('„Éó„É¨„Éì„É•„Éº')).toBeInTheDocument();
    expect(screen.getByText('„Ç¨„ÇπË¶ãÁ©ç„ÇÇ„Çä')).toBeInTheDocument();
    expect(screen.getByText('„Éá„Éó„É≠„Ç§')).toBeInTheDocument();
  });
});