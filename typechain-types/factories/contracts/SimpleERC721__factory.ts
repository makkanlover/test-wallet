/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleERC721,
  SimpleERC721Interface,
} from "../../contracts/SimpleERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseTokenURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintNext",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002eab38038062002eab8339818101604052810190620000379190620003c9565b80848481600090816200004b9190620006e3565b5080600190816200005d9190620006e3565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000cc9190620007db565b60405180910390fd5b620000e6816200010b60201b60201c565b508160079081620000f89190620006e3565b50600160088190555050505050620007f8565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023a82620001ef565b810181811067ffffffffffffffff821117156200025c576200025b62000200565b5b80604052505050565b600062000271620001d1565b90506200027f82826200022f565b919050565b600067ffffffffffffffff821115620002a257620002a162000200565b5b620002ad82620001ef565b9050602081019050919050565b60005b83811015620002da578082015181840152602081019050620002bd565b60008484015250505050565b6000620002fd620002f78462000284565b62000265565b9050828152602081018484840111156200031c576200031b620001ea565b5b62000329848285620002ba565b509392505050565b600082601f830112620003495762000348620001e5565b5b81516200035b848260208601620002e6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003918262000364565b9050919050565b620003a38162000384565b8114620003af57600080fd5b50565b600081519050620003c38162000398565b92915050565b60008060008060808587031215620003e657620003e5620001db565b5b600085015167ffffffffffffffff811115620004075762000406620001e0565b5b620004158782880162000331565b945050602085015167ffffffffffffffff811115620004395762000438620001e0565b5b620004478782880162000331565b935050604085015167ffffffffffffffff8111156200046b576200046a620001e0565b5b620004798782880162000331565b92505060606200048c87828801620003b2565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004eb57607f821691505b602082108103620005015762000500620004a3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200056b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200052c565b6200057786836200052c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005c4620005be620005b8846200058f565b62000599565b6200058f565b9050919050565b6000819050919050565b620005e083620005a3565b620005f8620005ef82620005cb565b84845462000539565b825550505050565b600090565b6200060f62000600565b6200061c818484620005d5565b505050565b5b8181101562000644576200063860008262000605565b60018101905062000622565b5050565b601f82111562000693576200065d8162000507565b62000668846200051c565b8101602085101562000678578190505b6200069062000687856200051c565b83018262000621565b50505b505050565b600082821c905092915050565b6000620006b86000198460080262000698565b1980831691505092915050565b6000620006d38383620006a5565b9150826002028217905092915050565b620006ee8262000498565b67ffffffffffffffff8111156200070a576200070962000200565b5b620007168254620004d2565b6200072382828562000648565b600060209050601f8311600181146200075b576000841562000746578287015190505b620007528582620006c5565b865550620007c2565b601f1984166200076b8662000507565b60005b8281101562000795578489015182556001820191506020850194506020810190506200076e565b86831015620007b55784890151620007b1601f891682620006a5565b8355505b6001600288020188555050505b505050505050565b620007d58162000384565b82525050565b6000602082019050620007f26000830184620007ca565b92915050565b6126a380620008086000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063a22cb46511610071578063a22cb46514610306578063b88d4fde14610322578063c87b56dd1461033e578063e985e9c51461036e578063f2fde38b1461039e57610121565b80636352211e1461026057806370a0823114610290578063715018a6146102c05780638da5cb5b146102ca57806395d89b41146102e857610121565b8063095ea7b3116100f4578063095ea7b3146101d457806323b872dd146101f057806340c10f191461020c57806342842e0e1461022857806355f804b31461024457610121565b8063016ea35a1461012657806301ffc9a71461015657806306fdde0314610186578063081812fc146101a4575b600080fd5b610140600480360381019061013b9190611a2b565b6103ba565b60405161014d9190611a71565b60405180910390f35b610170600480360381019061016b9190611ae4565b6103f6565b60405161017d9190611b2c565b60405180910390f35b61018e6104d8565b60405161019b9190611bd7565b60405180910390f35b6101be60048036038101906101b99190611c25565b61056a565b6040516101cb9190611c61565b60405180910390f35b6101ee60048036038101906101e99190611c7c565b610586565b005b61020a60048036038101906102059190611cbc565b61059c565b005b61022660048036038101906102219190611c7c565b61069e565b005b610242600480360381019061023d9190611cbc565b6106b4565b005b61025e60048036038101906102599190611e44565b6106d4565b005b61027a60048036038101906102759190611c25565b6106ef565b6040516102879190611c61565b60405180910390f35b6102aa60048036038101906102a59190611a2b565b610701565b6040516102b79190611a71565b60405180910390f35b6102c86107bb565b005b6102d26107cf565b6040516102df9190611c61565b60405180910390f35b6102f06107f9565b6040516102fd9190611bd7565b60405180910390f35b610320600480360381019061031b9190611eb9565b61088b565b005b61033c60048036038101906103379190611f9a565b6108a1565b005b61035860048036038101906103539190611c25565b6108c6565b6040516103659190611bd7565b60405180910390f35b6103886004803603810190610383919061201d565b61099c565b6040516103959190611b2c565b60405180910390f35b6103b860048036038101906103b39190611a2b565b610a30565b005b60006103c4610ab6565b60006008549050600860008154809291906103de9061208c565b91905055506103ed8382610b3d565b80915050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104c157507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104d157506104d082610c36565b5b9050919050565b6060600080546104e790612103565b80601f016020809104026020016040519081016040528092919081815260200182805461051390612103565b80156105605780601f1061053557610100808354040283529160200191610560565b820191906000526020600020905b81548152906001019060200180831161054357829003601f168201915b5050505050905090565b600061057582610ca0565b5061057f82610d28565b9050919050565b6105988282610593610d65565b610d6d565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060e5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106059190611c61565b60405180910390fd5b6000610622838361061d610d65565b610d7f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610698578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161068f93929190612134565b60405180910390fd5b50505050565b6106a6610ab6565b6106b08282610b3d565b5050565b6106cf838383604051806020016040528060008152506108a1565b505050565b6106dc610ab6565b80600790816106eb9190612317565b5050565b60006106fa82610ca0565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107745760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161076b9190611c61565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107c3610ab6565b6107cd6000610f99565b565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461080890612103565b80601f016020809104026020016040519081016040528092919081815260200182805461083490612103565b80156108815780601f1061085657610100808354040283529160200191610881565b820191906000526020600020905b81548152906001019060200180831161086457829003601f168201915b5050505050905090565b61089d610896610d65565b838361105f565b5050565b6108ac84848461059c565b6108c06108b7610d65565b858585856111ce565b50505050565b6060600073ffffffffffffffffffffffffffffffffffffffff166108e9836106ef565b73ffffffffffffffffffffffffffffffffffffffff160361093f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109369061245b565b60405180910390fd5b600061094961137f565b905060008151116109695760405180602001604052806000815250610994565b8061097384611411565b604051602001610984929190612503565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a38610ab6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610aaa5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610aa19190611c61565b60405180910390fd5b610ab381610f99565b50565b610abe610d65565b73ffffffffffffffffffffffffffffffffffffffff16610adc6107cf565b73ffffffffffffffffffffffffffffffffffffffff1614610b3b57610aff610d65565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b329190611c61565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610baf5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610ba69190611c61565b60405180910390fd5b6000610bbd83836000610d7f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c315760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610c289190611c61565b60405180910390fd5b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610cac836114df565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d1f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d169190611a71565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610d7a838383600161151c565b505050565b600080610d8b846114df565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610dcd57610dcc8184866116e1565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e5e57610e0f60008560008061151c565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ee1576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110d057816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110c79190611c61565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111c19190611b2c565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611378578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161122d9493929190612587565b6020604051808303816000875af192505050801561126957506040513d601f19601f8201168201806040525081019061126691906125e8565b60015b6112ed573d8060008114611299576040519150601f19603f3d011682016040523d82523d6000602084013e61129e565b606091505b5060008151036112e557836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112dc9190611c61565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461137657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161136d9190611c61565b60405180910390fd5b505b5050505050565b60606007805461138e90612103565b80601f01602080910402602001604051908101604052809291908181526020018280546113ba90612103565b80156114075780601f106113dc57610100808354040283529160200191611407565b820191906000526020600020905b8154815290600101906020018083116113ea57829003601f168201915b5050505050905090565b606060006001611420846117a5565b01905060008167ffffffffffffffff81111561143f5761143e611d19565b5b6040519080825280601f01601f1916602001820160405280156114715781602001600182028036833780820191505090505b509050600082602001820190505b6001156114d4578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114c8576114c7612615565b5b0494506000850361147f575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115555750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561168957600061156584610ca0565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115d057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115e357506115e1818461099c565b155b1561162557826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161161c9190611c61565b60405180910390fd5b811561168757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116ec8383836118f8565b6117a057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361176157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117589190611a71565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611797929190612644565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611803577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816117f9576117f8612615565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611840576d04ee2d6d415b85acef8100000000838161183657611835612615565b5b0492506020810190505b662386f26fc10000831061186f57662386f26fc10000838161186557611864612615565b5b0492506010810190505b6305f5e1008310611898576305f5e100838161188e5761188d612615565b5b0492506008810190505b61271083106118bd5761271083816118b3576118b2612615565b5b0492506004810190505b606483106118e057606483816118d6576118d5612615565b5b0492506002810190505b600a83106118ef576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119b057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806119715750611970848461099c565b5b806119af57508273ffffffffffffffffffffffffffffffffffffffff1661199783610d28565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119f8826119cd565b9050919050565b611a08816119ed565b8114611a1357600080fd5b50565b600081359050611a25816119ff565b92915050565b600060208284031215611a4157611a406119c3565b5b6000611a4f84828501611a16565b91505092915050565b6000819050919050565b611a6b81611a58565b82525050565b6000602082019050611a866000830184611a62565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611ac181611a8c565b8114611acc57600080fd5b50565b600081359050611ade81611ab8565b92915050565b600060208284031215611afa57611af96119c3565b5b6000611b0884828501611acf565b91505092915050565b60008115159050919050565b611b2681611b11565b82525050565b6000602082019050611b416000830184611b1d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b81578082015181840152602081019050611b66565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ba982611b47565b611bb38185611b52565b9350611bc3818560208601611b63565b611bcc81611b8d565b840191505092915050565b60006020820190508181036000830152611bf18184611b9e565b905092915050565b611c0281611a58565b8114611c0d57600080fd5b50565b600081359050611c1f81611bf9565b92915050565b600060208284031215611c3b57611c3a6119c3565b5b6000611c4984828501611c10565b91505092915050565b611c5b816119ed565b82525050565b6000602082019050611c766000830184611c52565b92915050565b60008060408385031215611c9357611c926119c3565b5b6000611ca185828601611a16565b9250506020611cb285828601611c10565b9150509250929050565b600080600060608486031215611cd557611cd46119c3565b5b6000611ce386828701611a16565b9350506020611cf486828701611a16565b9250506040611d0586828701611c10565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d5182611b8d565b810181811067ffffffffffffffff82111715611d7057611d6f611d19565b5b80604052505050565b6000611d836119b9565b9050611d8f8282611d48565b919050565b600067ffffffffffffffff821115611daf57611dae611d19565b5b611db882611b8d565b9050602081019050919050565b82818337600083830152505050565b6000611de7611de284611d94565b611d79565b905082815260208101848484011115611e0357611e02611d14565b5b611e0e848285611dc5565b509392505050565b600082601f830112611e2b57611e2a611d0f565b5b8135611e3b848260208601611dd4565b91505092915050565b600060208284031215611e5a57611e596119c3565b5b600082013567ffffffffffffffff811115611e7857611e776119c8565b5b611e8484828501611e16565b91505092915050565b611e9681611b11565b8114611ea157600080fd5b50565b600081359050611eb381611e8d565b92915050565b60008060408385031215611ed057611ecf6119c3565b5b6000611ede85828601611a16565b9250506020611eef85828601611ea4565b9150509250929050565b600067ffffffffffffffff821115611f1457611f13611d19565b5b611f1d82611b8d565b9050602081019050919050565b6000611f3d611f3884611ef9565b611d79565b905082815260208101848484011115611f5957611f58611d14565b5b611f64848285611dc5565b509392505050565b600082601f830112611f8157611f80611d0f565b5b8135611f91848260208601611f2a565b91505092915050565b60008060008060808587031215611fb457611fb36119c3565b5b6000611fc287828801611a16565b9450506020611fd387828801611a16565b9350506040611fe487828801611c10565b925050606085013567ffffffffffffffff811115612005576120046119c8565b5b61201187828801611f6c565b91505092959194509250565b60008060408385031215612034576120336119c3565b5b600061204285828601611a16565b925050602061205385828601611a16565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061209782611a58565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120c9576120c861205d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061211b57607f821691505b60208210810361212e5761212d6120d4565b5b50919050565b60006060820190506121496000830186611c52565b6121566020830185611a62565b6121636040830184611c52565b949350505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026121cd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612190565b6121d78683612190565b95508019841693508086168417925050509392505050565b6000819050919050565b600061221461220f61220a84611a58565b6121ef565b611a58565b9050919050565b6000819050919050565b61222e836121f9565b61224261223a8261221b565b84845461219d565b825550505050565b600090565b61225761224a565b612262818484612225565b505050565b5b818110156122865761227b60008261224f565b600181019050612268565b5050565b601f8211156122cb5761229c8161216b565b6122a584612180565b810160208510156122b4578190505b6122c86122c085612180565b830182612267565b50505b505050565b600082821c905092915050565b60006122ee600019846008026122d0565b1980831691505092915050565b600061230783836122dd565b9150826002028217905092915050565b61232082611b47565b67ffffffffffffffff81111561233957612338611d19565b5b6123438254612103565b61234e82828561228a565b600060209050601f831160018114612381576000841561236f578287015190505b61237985826122fb565b8655506123e1565b601f19841661238f8661216b565b60005b828110156123b757848901518255600182019150602085019450602081019050612392565b868310156123d457848901516123d0601f8916826122dd565b8355505b6001600288020188555050505b505050505050565b7f4552433732313a2055524920717565727920666f72206e6f6e6578697374656e60008201527f7420746f6b656e00000000000000000000000000000000000000000000000000602082015250565b6000612445602783611b52565b9150612450826123e9565b604082019050919050565b6000602082019050818103600083015261247481612438565b9050919050565b600081905092915050565b600061249182611b47565b61249b818561247b565b93506124ab818560208601611b63565b80840191505092915050565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000600082015250565b60006124ed60058361247b565b91506124f8826124b7565b600582019050919050565b600061250f8285612486565b915061251b8284612486565b9150612526826124e0565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061255982612532565b612563818561253d565b9350612573818560208601611b63565b61257c81611b8d565b840191505092915050565b600060808201905061259c6000830187611c52565b6125a96020830186611c52565b6125b66040830185611a62565b81810360608301526125c8818461254e565b905095945050505050565b6000815190506125e281611ab8565b92915050565b6000602082840312156125fe576125fd6119c3565b5b600061260c848285016125d3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506126596000830185611c52565b6126666020830184611a62565b939250505056fea2646970667358221220970e5f16b2655de58467f17d2dd0b8d83ea702ac5ddb248c95598b5a149880f864736f6c63430008140033";

type SimpleERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleERC721__factory extends ContractFactory {
  constructor(...args: SimpleERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    baseTokenURI: string,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      baseTokenURI,
      owner,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    baseTokenURI: string,
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      baseTokenURI,
      owner,
      overrides || {}
    ) as Promise<
      SimpleERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleERC721__factory {
    return super.connect(runner) as SimpleERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleERC721Interface {
    return new Interface(_abi) as SimpleERC721Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleERC721 {
    return new Contract(address, _abi, runner) as unknown as SimpleERC721;
  }
}
